export type PlaylistEpisodeSourcesRequest = {
    playlistId: string;
    episodeId: string;
};
export type PlaylistEpisodeSource = {
    id: string;
    displayName: string;
    description?: string;
    servers: PlaylistEpisodeServer[];
};
export type PlaylistEpisodeServer = {
    id: string;
    displayName: string;
    description?: string;
};
export type PlaylistEpisodeServerRequest = {
    playlistId: string;
    episodeId: string;
    sourceId: string;
    serverId: string;
};
export type PlaylistEpisodeServerResponse = {
    links: PlaylistEpisodeServerLink[];
    subtitles: PlaylistEpisodeServerSubtitle[];
    skipTimes: PlaylistEpisodeServerSkipTime[];
    headers: Record<string, string>;
};
export type PlaylistEpisodeServerLink = {
    url: string;
    quality: PlaylistEpisodeServerQualityType;
    format: PlaylistEpisodeServerFormatType;
};
export declare enum PlaylistEpisodeServerQualityType {
    auto = 0,
    q360p = 1,
    q480p = 2,
    q720p = 3,
    q1080p = 4
}
export declare enum PlaylistEpisodeServerFormatType {
    hsl = 0,
    dash = 1
}
export type PlaylistEpisodeServerSubtitle = {
    url: string;
    name: string;
    format: PlaylistEpisodeServerSubtitleFormat;
    default: boolean;
    autoselect: boolean;
};
export declare enum PlaylistEpisodeServerSubtitleFormat {
    vtt = 0,
    ass = 1,
    srt = 2
}
export type PlaylistEpisodeServerSkipTime = {
    startTime: number;
    endTime: number;
    type: PlaylistEpisodeServerSkipType;
};
export declare enum PlaylistEpisodeServerSkipType {
    opening = 0,
    ending = 1,
    recap = 2
}
//# sourceMappingURL=types.d.ts.map